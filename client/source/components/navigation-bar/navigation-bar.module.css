.container {
  display: grid;
  overflow-y: hidden;
  width: calc(100% - var(--side-padding) * 2);
  margin-top: auto;
  border-top: 3px solid var(--space-cadet-500);
  background-color: white;
  padding-block: 1rem max(env(safe-area-inset-bottom), 1rem);
  grid-template-columns: repeat(3, auto);
  scrollbar-width: none;
  padding-inline: var(--side-padding);
  place-content: space-around;

  @media (orientation: landscape) {
    --content-height: min(65dvh, 500px);
    overflow-y: auto;
    order: -1;
    width: 5rem;
    height: var(--content-height);
    padding-block-end: calc(100dvh - var(--content-height));
    margin-top: 0;
    border-inline-end: 3px solid var(--space-cadet-500);
    border-top: 0;
    grid-template-rows: repeat(4, auto);
    grid-template-columns: 1fr;
    padding-inline: 0;
  }
}

.item {
  position: relative;
  display: grid;
  min-width: min(46px, 20dvw);
  color: var(--space-cadet-500);
  transition-duration: var(--default-duration);
  transition-property: font;
  font: var(--tiny-regular);
  text-decoration: none;
  grid-template-rows: auto auto;
  place-items: center;
  place-content: center;
  gap: 10px;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;

  &:active::before {
    opacity: 0.3;
    scale: 3;
  }

  &::before {
    position: absolute;
    display: block;
    width: auto;
    height: 100%;
    border-radius: 50%;
    opacity: 0;
    background-color: var(--space-cadet-500);
    content: '';
    transition-duration: calc(var(--default-duration) * 1.25);
    transition-property: opacity, scale;
    pointer-events: none;
    aspect-ratio: 1;
    scale: 2.2;
  }

  @media (orientation: landscape) {
    &::before {
      display: none;
    }
  }
}

@keyframes expand {
  from {
    scale: 1;
  }
}

.icon {
  height: 1.5rem;
  transition-duration: var(--default-duration);
  transition-property: translate, fill;

  [active] > & {
    &[data-name='Home'] {
      fill: currentColor;
    }

    &[data-name='Insights'] {
      fill: currentColor;
      path,
      rect {
        stroke: transparent;
      }
    }

    &[data-name='Settings'] {
      fill: currentColor;
      path:last-child {
        fill: var(--white);
      }
    }
  }

  .item:not([active]) & {
    translate: 0% 4px;
  }
}
