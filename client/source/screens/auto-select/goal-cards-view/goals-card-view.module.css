@property --knob {
  syntax: '<number>';
  initial-value: 0;
  inherits: true;
}

.goalCards {
  /* Reducing the constant will make the cards at the back of the stack darker. */
  --dim-factor: calc(var(--total) * 2);
  --goal-card-border-radius: 5dvh;
  --goal-card-height: calc(60dvh - (var(--side-padding) * 0.5));
  --goal-card-border-width: 4px;
  --knob: 0;

  display: grid;
  overflow-x: hidden;
  overflow-y: auto;
  width: 100%;
  height: 100%;
  transition-duration: var(--drawer);
  transition-property: scale;
  animation-name: turn-scroll-knob;
  animation-duration: auto;
  scrollbar-width: none;
  overscroll-behavior-y: auto;
  scroll-snap-align: start;

  grid-template-columns: 1fr;
  grid-template-rows: repeat(var(--total), auto);
  grid-row: 1;
  grid-column: 1;
  translate: 0 calc(var(--goal-card-border-radius) * 1.5);
  animation-timeline: scroll(self block);

  & > * {
    --brightness: calc(
      1 - ((var(--total) - var(--index)) / var(--dim-factor)) + var(--knob) *
        0.3
    );

    position: sticky;
    top: 0;
    margin-block-end: -12dvh;
    opacity: 0;
    animation-name: var(--fade-in);
    animation-duration: calc(var(--default-duration) * 2);
    animation-delay: calc(
      (var(--total) - var(--index)) * var(--default-duration) * 0.35
    );
    filter: drop-shadow(0 0 10px #00000080) brightness(var(--brightness));
    translate: 0 calc(var(--index) * 7.5dvh);
    scale: calc(1 - ((var(--total) - var(--index)) / var(--total) * 0.09));
    animation-fill-mode: forwards;

    @supports not (animation-timeline: scroll(self block)) {
      transition-duration: var(--animation-duration);
      transition-property: filter;
    }

    @supports (animation-timeline: scroll(self block)) {
      translate: 0 calc(var(--index) * 7.5dvh + (var(--knob) * 15vh));
    }
  }
}

@keyframes turn-scroll-knob {
  from {
    --knob: 1;
  }
  to {
    --knob: 0;
  }
}

.buttonRow {
  --animation-delay: calc(var(--default-duration) * 3);
  --gap: 10px;
  --starting-fade-position-y: 40%;
  display: grid;
  align-self: end;
  width: calc(90% - var(--side-padding));
  margin-bottom: var(--block-padding);
  opacity: 0;
  transition-duration: var(--drawer);
  transition-property: scale;
  animation: var(--fade-in-from-bottom) calc(var(--default-duration) * 1.2)
    var(--animation-delay) both;
  place-items: center;
  grid-template-columns: auto auto;
  gap: var(--gap);
  justify-self: center;
  grid-row: 1;
  grid-column: 1;
}

.btn {
  display: grid;
  filter: drop-shadow(0 0 10px #0000003e);
  grid-auto-flow: column;
  gap: 6px;
}

.btnIcon {
  width: calc(var(--base-font-size) * 1.2);
}
