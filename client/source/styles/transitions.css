/* Prelude. */
::view-transition-group(*) {
  animation-duration: var(--view-transition-duration);
  animation-timing-function: cubic-bezier(0.42, 0, 0.58, 1);
}

::view-transition-old(root),
::view-transition-new(root),
::view-transition-group(root) {
  animation: none;
}

/* Starting Logo Transition from index.html to app. */
::view-transition-old(start-logo) {
  transition-duration: var(--default-duration);
  translate: -5% -6%;
  scale: 0.9;
}

/* Fallback for browsers that don't support animation-timeline. Adding this class will require an assumption that the element already has an animation set to scroll(self).  */
.scrollTimelineFallback {
  animation-duration: 100ms;
  animation-play-state: paused;
}

:root {
  /* Animation Names */
  /* I cant figure out how to use global animation names inside of CSS modules, so I'm using them as variables */
  --twinkle: twinkle;
  --blink: blink;
  --shake: shake;
  --bump-up: bump-up;
  --fade-in: fade-in;
  --fade-out: fade-out;
  --fade-in-from-top: fade-in-from-top;
  --fade-in-from-bottom: fade-in-from-bottom;
  --fade-in-from-bottom-stretch: fade-in-from-bottom-stretch;
  --fade-stretch-from-bottom: fade-stretch-from-bottom;
  --pop: pop;
  --loader-spin: loader-spin;
  --loader-fill: loader-fill;
  --expand-in: expand-in;
}

@keyframes shrink-out {
  to {
    opacity: 0;
    scale: 0.6;
  }
}

@keyframes condense-in {
  from {
    opacity: 0;
    scale: var(--starting-scale, 1.4);
  }
  to {
    opacity: var(--ending-opacity, 1);
    scale: 1;
  }
}

@keyframes expand-in {
  from {
    opacity: 0;
    scale: 0.6;
  }
}

@keyframes expand-forever {
  to {
    scale: var(--ending-scale, 200);
  }
}

@keyframes condense-out {
  to {
    opacity: 0;
    scale: 1.4;
  }
}

@keyframes slide-out-to-left {
  to {
    filter: brightness(0.5);
    translate: -50%;
    scale: 0.7 1;
  }
}

@keyframes slide-in-from-right {
  from {
    translate: 100%;
  }
}

@keyframes slide-out-to-right {
  to {
    translate: 100%;
  }
}

@keyframes slide-in-from-left {
  from {
    filter: brightness(0.5);
    translate: -90%;
    scale: 0.8 1;
  }
}

@keyframes blink {
  0% {
    opacity: 1;
  }
  1% {
    opacity: 0;
  }
  25% {
    opacity: 1;
  }
}

@keyframes shake {
  0% {
    rotate: 0deg;
  }
  5% {
    rotate: -10deg;
  }
  10% {
    rotate: 10deg;
  }
  15% {
    rotate: -5deg;
  }
  20% {
    rotate: 5deg;
  }
  25% {
    rotate: 0deg;
  }
}

@keyframes bump-up {
  0% {
    translate: 0;
  }
  70% {
    translate: 5% -5%;
  }
  100% {
    translate: 0;
  }
}

@keyframes twinkle {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: var(--final-element-opacity, 1);
  }
}

@keyframes fade-out {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  92% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes fade-in-from-top {
  0% {
    opacity: 0;
    transform: translateY(var(--starting-fade-position-y, -100%));
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-from-bottom {
  0% {
    opacity: 0;
    transform: translateY(var(--starting-fade-position-y, 100%));
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-stretch-from-bottom {
  0% {
    opacity: 0;
    transform: translateY(var(--starting-fade-position-y, 100%));
    scale: var(--starting-scale, 1 0.9);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
    scale: var(--ending-scale, 1 1);
  }
}

.hourglass-loader {
  --base-animation-duration: 3s;
  width: 1.2rem;
  animation: loader-spin infinite;
  animation-duration: var(--base-animation-duration);

  .button__loader__bottom {
    animation: loader-fill infinite;
    animation-duration: var(--base-animation-duration);
    fill: currentColor;
  }

  .button__loader__top {
    animation: loader-fill infinite;
    animation-duration: var(--base-animation-duration);
    animation-delay: calc(var(--base-animation-duration) / 2);
    fill: currentColor;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes loader-spin {
  0% {
    rotate: 0deg;
  }

  50% {
    rotate: 180deg;
  }

  100% {
    rotate: 360deg;
  }
}

@keyframes loader-fill {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes pop {
  from {
    opacity: 0;
    scale: var(--starting-scale, 0.5);
  }
  to {
    opacity: 1;
    scale: var(--ending-scale, 1);
  }
}

@keyframes slide-inline-enter {
  from {
    opacity: 0;
    transform: translateX(50%);
  }
}

@keyframes slide-inline-exit {
  to {
    opacity: 0;
    transform: translateX(-30%);
    filter: brightness(0.9);
  }
}
